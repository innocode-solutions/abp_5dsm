name: Backend CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Clonar o reposit√≥rio
      - name: Checkout do reposit√≥rio
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Configurar Node.js com cache
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      # 3Ô∏è‚É£ Instalar depend√™ncias
      - name: Instalar depend√™ncias
        run: npm ci
        working-directory: ./backend

      # 4Ô∏è‚É£ Rodar Lint (opcional)
      - name: Rodar Lint
        if: hashFiles('backend/**/.eslintrc*') != ''
        run: npm run lint || echo "‚ö†Ô∏è ESLint n√£o configurado, ignorando etapa."
        working-directory: ./backend

      # 5Ô∏è‚É£ Build do projeto
      - name: Build do projeto
        run: npm run build
        working-directory: ./backend

      # 6Ô∏è‚É£ Rodar testes (Jest)
      - name: Rodar Testes
        run: npm test
        working-directory: ./backend

      # 7Ô∏è‚É£ Verificar secrets Railway
      - name: Testar Secrets Railway
        run: |
          if [ -z "$RAILWAY_TOKEN" ]; then
            echo "‚ùå O token do Railway n√£o foi carregado (RAILWAY_BACKEND)."
            exit 1
          fi
          if [ -z "$RAILWAY_PROJECT_ID" ]; then
            echo "‚ùå O ID do projeto Railway n√£o foi carregado (RAILWAY_PROJECT)."
            exit 1
          fi
          echo "‚úÖ Secrets Railway encontrados com sucesso."
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_BACKEND }}
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT }}

      # 8Ô∏è‚É£ Deploy para o Railway
      - name: Deploy para o Railway üöÄ
        run: |
          npx @railway/cli@latest up --service backend --ci
        working-directory: ./backend
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_BACKEND }}
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT }}
