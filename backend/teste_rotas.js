const axios = require('axios');

const BASE_URL = 'http://localhost:3000/api';

async function testarRotas() {
  try {
    console.log('üß™ Testando rotas do servidor...\n');

    // 1. Testar rota de health
    console.log('1Ô∏è‚É£ Testando rota de health...');
    try {
      const healthResponse = await axios.get(`${BASE_URL}/health`);
      console.log('‚úÖ Health check funcionando:', healthResponse.data);
    } catch (error) {
      console.log('‚ùå Health check falhou:', error.response?.data || error.message);
    }

    // 2. Testar login
    console.log('\n2Ô∏è‚É£ Testando login...');
    try {
      const loginResponse = await axios.post(`${BASE_URL}/auth/login`, {
        Email: 'admin@test.com',
        password: '123456'
      });
      console.log('‚úÖ Login funcionando!');
      console.log(`   Token: ${loginResponse.data.token.substring(0, 50)}...`);
      console.log(`   User ID: ${loginResponse.data.user.IDUser}`);
      
      const token = loginResponse.data.token;
      
      // 3. Testar rota de usu√°rios
      console.log('\n3Ô∏è‚É£ Testando rota de usu√°rios...');
      try {
        const usersResponse = await axios.get(`${BASE_URL}/users`, {
          headers: { Authorization: `Bearer ${token}` }
        });
        console.log('‚úÖ Rota de usu√°rios funcionando!');
        console.log(`   Usu√°rios encontrados: ${usersResponse.data.length}`);
      } catch (error) {
        console.log('‚ùå Rota de usu√°rios falhou:', error.response?.data || error.message);
      }

      // 4. Testar rota de cursos
      console.log('\n4Ô∏è‚É£ Testando rota de cursos...');
      try {
        const cursosResponse = await axios.get(`${BASE_URL}/cursos`, {
          headers: { Authorization: `Bearer ${token}` }
        });
        console.log('‚úÖ Rota de cursos funcionando!');
        console.log(`   Cursos encontrados: ${cursosResponse.data.length}`);
      } catch (error) {
        console.log('‚ùå Rota de cursos falhou:', error.response?.data || error.message);
      }

      // 5. Testar rota de disciplinas
      console.log('\n5Ô∏è‚É£ Testando rota de disciplinas...');
      try {
        const disciplinasResponse = await axios.get(`${BASE_URL}/disciplinas`, {
          headers: { Authorization: `Bearer ${token}` }
        });
        console.log('‚úÖ Rota de disciplinas funcionando!');
        console.log(`   Disciplinas encontradas: ${disciplinasResponse.data.length}`);
      } catch (error) {
        console.log('‚ùå Rota de disciplinas falhou:', error.response?.data || error.message);
      }

      // 6. Testar rota de per√≠odos
      console.log('\n6Ô∏è‚É£ Testando rota de per√≠odos...');
      try {
        const periodosResponse = await axios.get(`${BASE_URL}/periodos`, {
          headers: { Authorization: `Bearer ${token}` }
        });
        console.log('‚úÖ Rota de per√≠odos funcionando!');
        console.log(`   Per√≠odos encontrados: ${periodosResponse.data.length}`);
      } catch (error) {
        console.log('‚ùå Rota de per√≠odos falhou:', error.response?.data || error.message);
      }

      // 7. Testar rota de alunos
      console.log('\n7Ô∏è‚É£ Testando rota de alunos...');
      try {
        const alunosResponse = await axios.get(`${BASE_URL}/alunos`, {
          headers: { Authorization: `Bearer ${token}` }
        });
        console.log('‚úÖ Rota de alunos funcionando!');
        console.log(`   Alunos encontrados: ${alunosResponse.data.length}`);
      } catch (error) {
        console.log('‚ùå Rota de alunos falhou:', error.response?.data || error.message);
      }

      // 8. Testar rota de matr√≠culas
      console.log('\n8Ô∏è‚É£ Testando rota de matr√≠culas...');
      try {
        const matriculasResponse = await axios.get(`${BASE_URL}/matriculas`, {
          headers: { Authorization: `Bearer ${token}` }
        });
        console.log('‚úÖ Rota de matr√≠culas funcionando!');
        console.log(`   Matr√≠culas encontradas: ${matriculasResponse.data.length}`);
      } catch (error) {
        console.log('‚ùå Rota de matr√≠culas falhou:', error.response?.data || error.message);
      }

      // 9. Testar rota de predi√ß√µes
      console.log('\n9Ô∏è‚É£ Testando rota de predi√ß√µes...');
      try {
        const predictionsResponse = await axios.get(`${BASE_URL}/predictions`, {
          headers: { Authorization: `Bearer ${token}` }
        });
        console.log('‚úÖ Rota de predi√ß√µes funcionando!');
        console.log(`   Predi√ß√µes encontradas: ${predictionsResponse.data.length}`);
      } catch (error) {
        console.log('‚ùå Rota de predi√ß√µes falhou:', error.response?.data || error.message);
      }

      // 10. Testar rota do dashboard
      console.log('\nüîü Testando rota do dashboard...');
      try {
        const dashboardResponse = await axios.get(`${BASE_URL}/dashboard/professor/${loginResponse.data.user.IDUser}`, {
          headers: { Authorization: `Bearer ${token}` }
        });
        console.log('‚úÖ Rota do dashboard funcionando!');
        console.log(`   Dados do dashboard:`, dashboardResponse.data);
      } catch (error) {
        console.log('‚ùå Rota do dashboard falhou:', error.response?.data || error.message);
      }

    } catch (error) {
      console.log('‚ùå Login falhou:', error.response?.data || error.message);
    }

  } catch (error) {
    console.error('‚ùå Erro geral:', error.response?.data || error.message);
  }
}

testarRotas();


