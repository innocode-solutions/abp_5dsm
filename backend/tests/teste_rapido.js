// Teste r√°pido do JWT - Execute: node teste_rapido.js
const axios = require('axios');

const BASE_URL = 'http://localhost:3000/api';

async function testeRapido() {
  console.log('üß™ TESTE R√ÅPIDO DO JWT\n');
  
  try {
    // 1. Registrar usu√°rio
    console.log('1Ô∏è‚É£ Registrando usu√°rio...');
    try {
      await axios.post(`${BASE_URL}/auth/register`, {
        Email: 'teste@example.com',
        PasswordHash: '123456',
        name: 'Usu√°rio Teste',
        Role: 'STUDENT'
      });
      console.log('‚úÖ Usu√°rio registrado');
    } catch (error) {
      if (error.response?.status === 409) {
        console.log('‚ö†Ô∏è Usu√°rio j√° existe, continuando...');
      } else {
        throw error;
      }
    }

    // 2. Fazer login
    console.log('\n2Ô∏è‚É£ Fazendo login...');
    const loginResponse = await axios.post(`${BASE_URL}/auth/login`, {
      Email: 'teste@example.com',
      password: '123456'
    });
    
    const token = loginResponse.data.token;
    console.log('‚úÖ Login realizado!');
    console.log(`üîë Token: ${token.substring(0, 30)}...`);

    // 3. Testar acesso com token
    console.log('\n3Ô∏è‚É£ Testando acesso com token...');
    const meResponse = await axios.get(`${BASE_URL}/auth/me`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    console.log('‚úÖ Acesso com token funcionando!');
    console.log(`üë§ Usu√°rio: ${meResponse.data.name} (${meResponse.data.Role})`);

    // 4. Testar acesso sem token
    console.log('\n4Ô∏è‚É£ Testando acesso sem token...');
    try {
      await axios.get(`${BASE_URL}/users`);
      console.log('‚ùå ERRO: Deveria ter falhado!');
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('‚úÖ Acesso sem token bloqueado corretamente!');
      }
    }

    // 5. Testar token inv√°lido
    console.log('\n5Ô∏è‚É£ Testando token inv√°lido...');
    try {
      await axios.get(`${BASE_URL}/auth/me`, {
        headers: { 'Authorization': 'Bearer token-invalido' }
      });
      console.log('‚ùå ERRO: Deveria ter falhado!');
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('‚úÖ Token inv√°lido bloqueado corretamente!');
      }
    }

    console.log('\nüéâ TODOS OS TESTES PASSARAM!');
    console.log('‚úÖ Sistema de autentica√ß√£o JWT funcionando perfeitamente!');

  } catch (error) {
    console.log('\n‚ùå ERRO:', error.message);
    if (error.code === 'ECONNREFUSED') {
      console.log('üí° Certifique-se de que o servidor est√° rodando: npm run dev');
    }
  }
}

testeRapido();
