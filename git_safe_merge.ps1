# Script para fazer merge seguro sem perder altera√ß√µes
param(
    [string]$BranchName = "main"
)

Write-Host "üîÑ Fazendo merge seguro com $BranchName..." -ForegroundColor Green
Write-Host "=" * 50

# 1. Verificar se estamos em uma branch
$currentBranch = git branch --show-current
if (-not $currentBranch) {
    Write-Host "‚ùå N√£o estamos em uma branch. Execute 'git checkout -b nome-da-branch'" -ForegroundColor Red
    exit 1
}

Write-Host "üìã Branch atual: $currentBranch" -ForegroundColor Cyan

# 2. Fazer backup das altera√ß√µes
Write-Host "1Ô∏è‚É£ Fazendo backup das altera√ß√µes..." -ForegroundColor Yellow
git stash push -m "Backup antes do merge com $BranchName - $(Get-Date)"

# 3. Fazer merge com estrat√©gia que preserva altera√ß√µes
Write-Host "2Ô∏è‚É£ Fazendo merge com estrat√©gia segura..." -ForegroundColor Yellow
try {
    git merge --no-edit --strategy=recursive -X ours origin/$BranchName
    Write-Host "‚úÖ Merge realizado com sucesso!" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Houve conflitos, resolvendo automaticamente..." -ForegroundColor Yellow
    
    # 4. Resolver conflitos automaticamente
    Write-Host "3Ô∏è‚É£ Resolvendo conflitos..." -ForegroundColor Yellow
    & .\resolve_conflicts.ps1
    
    # 5. Verificar se ainda h√° conflitos
    $gitStatus = git status --porcelain
    if ($gitStatus -match 'UU|AA|DD') {
        Write-Host "‚ö†Ô∏è Ainda h√° conflitos n√£o resolvidos:" -ForegroundColor Yellow
        Write-Host $gitStatus -ForegroundColor Red
        Write-Host "üîß Execute manualmente: git add . && git commit" -ForegroundColor Cyan
    } else {
        # 6. Adicionar arquivos resolvidos
        git add .
        
        # 7. Fazer commit da resolu√ß√£o
        git commit -m "resolve: resolver conflitos de merge com $BranchName automaticamente"
        
        Write-Host "‚úÖ Conflitos resolvidos automaticamente!" -ForegroundColor Green
    }
}

# 8. Restaurar altera√ß√µes locais se necess√°rio
Write-Host "4Ô∏è‚É£ Verificando se h√° altera√ß√µes para restaurar..." -ForegroundColor Yellow
$stashList = git stash list
if ($stashList -match "Backup antes do merge") {
    Write-Host "‚ö†Ô∏è H√° altera√ß√µes em stash. Execute 'git stash pop' se necess√°rio." -ForegroundColor Yellow
    Write-Host "   Para ver as altera√ß√µes: git stash show -p" -ForegroundColor Cyan
}

Write-Host "`nüéâ Merge seguro conclu√≠do!" -ForegroundColor Green
Write-Host "‚úÖ Todas as altera√ß√µes foram preservadas!" -ForegroundColor Green
